name: Code Test & Analysis

on:
  push:
    branches: ['main']
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Code Lint
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Lint .NET
        run: dotnet format ./src/Sanduba.Payment.MercadoPago/Sanduba.Financial.MercadoPago.sln --verify-no-changes --verbosity diagnostic 

  test:
    name: Code Test
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Test .NET
        run: dotnet test ./src/Sanduba.Payment.MercadoPago/Sanduba.Financial.MercadoPago.sln --verbosity normal
        

  sonar:
    name: Code Analysis
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install dotnet coverage
        shell: powershell
        run: |
          dotnet tool install --global dotnet-coverage

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"PosTech-SotfwareArchitecture-RM352065_tech-challenge-fiap-api-payment" /o:"postech-sotfwarearchitecture-rm352065" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build ./src/Sanduba.Payment.MercadoPago/Sanduba.Financial.MercadoPago.sln --no-incremental
          dotnet-coverage collect "dotnet test .\src\Sanduba.Payment.MercadoPago\Sanduba.Financial.MercadoPago.sln /p:CollectCoverage=true" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  robot_test:
    name: Integration Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'
    defaults:
      run:
        working-directory: ./robot

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Robot Framework and other dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Robot Framework tests
      run: |
              python -m robot tests/suites/api_test_suite.robot

              python -c "
              import os
              import xml.etree.ElementTree as ET

              root = ET.parse('output.xml')
              results = []
              for stat in root.findall('.//stat'):
                  pass_count = stat.get('pass')
                  fail_count = stat.get('fail')
                  skip_count = stat.get('skip')
                  results.append({'pass': pass_count, 'fail': fail_count, 'skip': skip_count})

              print(f'Skiped tests: {skip_count}')
              print(f'Passed tests: {pass_count}')
              print(f'Failed tests: {fail_count}')

              with open(os.environ['GITHUB_ENV'], 'a') as env_file:
                  env_file.write(f'SKIPED_TESTS={skip_count}\n')
                  env_file.write(f'PASSED_TESTS={pass_count}\n')
                  env_file.write(f'FAILED_TESTS={fail_count}\n')
                      "

    - name: Update pull request
      id: comment
      uses: actions/github-script@v7
      env:
        PLAN: ${{ steps.plan.outputs.stdout }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Integration Test Results
          #### Skiped tests üîï\`${{ env.SKIPED_TESTS }}\`
          #### Passed tests ‚úÖ\`${{ env.PASSED_TESTS }}\`
          #### Failed tests ‚ùå\`${{ env.FAILED_TESTS }}\`

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy
    uses: ./.github/workflows/docker-push.yml
    secrets: inherit
    needs: [lint, test, sonar]